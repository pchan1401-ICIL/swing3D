Index: app/src/main/java/com/example/brb_lab/swing3d/ChanMain.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/brb_lab/swing3d/ChanMain.java	(revision ce64bb6d82b85d673c91148be298f23eda10272e)
+++ app/src/main/java/com/example/brb_lab/swing3d/ChanMain.java	(revision )
@@ -2,7 +2,6 @@
 
 import android.app.Activity;
 import android.content.Intent;
-import android.graphics.Canvas;
 import android.media.MediaPlayer;
 import android.os.Bundle;
 import android.os.Environment;
@@ -11,7 +10,6 @@
 import android.view.View;
 import android.widget.Button;
 import android.widget.FrameLayout;
-import android.widget.MediaController;
 import android.widget.RadioButton;
 import android.widget.SeekBar;
 import android.widget.VideoView;
@@ -20,25 +18,25 @@
 
 public class ChanMain extends Activity
 {
-    private int showRange;
-    private MyRenderer mRenderer;
-    private MyGLSurfaceView mGLView;
-    private int isRun = 0;
     static int RUNNING = 1;
     static int STOPPED = 0;
-    private boolean breaker = false;
     Handler mHandler = new Handler();
-
     RadioButton radioButton1;
     RadioButton radioButton2;
     FrameLayout frameLayout1;
     SeekBar seekBar1;
+    boolean do_pause = false;
+    private int showRange;
+    private MyRenderer mRenderer;
+    private MyGLSurfaceView mGLView;
+    private int isRun = 0;
+    private boolean breaker = false;
-////////////////////////////////CHAO
+    ////////////////////////////////CHAO
     private VideoView videoView;
     private Button play;
     private Button pause;
-    boolean do_pause = false;
+
-///////////////////////////////////////CHAO
+    ///////////////////////////////////////CHAO
     protected void onCreate(Bundle savedInstanceState)
     {
         super.onCreate(savedInstanceState);
@@ -135,19 +133,15 @@
         button4.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                if (seekBar1.getMax() != seekBar1.getProgress()) {
-                    if (isRun == STOPPED) {
+                if (!videoView.isPlaying()) {
                         videoView.resume();
                         videoView.start();
                         button4.setText("Stop");
-                    } else if (isRun == RUNNING) {
+                } else {
                         videoView.pause();
                         button4.setText("Start");
                     }
                 }
-                autoRun();
-            }
-
         });
 
         seekBar1.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener()           //SeekBar View
@@ -158,15 +152,14 @@
                 showRange=(seekBar1.getProgress()+1)*3;                 //change showRange to show how much show the line
                 mRenderer.DrawTo(showRange);
                 mGLView.requestRender();
-                if(seekBar1.getProgress() == seekBar1.getMax())
-                {
-                    button4.setText("Start");
-                }
                 if(fromUser)
                 {
                     videoView.seekTo(progress*100);
                 }
+                if (seekBar1.getProgress() == seekBar1.getMax()) {
+                    button4.setText("Start");
-            }
+                }
+            }
 
             @Override
             public void onStartTrackingTouch(SeekBar seekBar)
@@ -193,76 +186,35 @@
 
 
     }
-    private Runnable onEverySecond=new Runnable() {
 
-        @Override
-        public void run() {
-
-            if(seekBar1 != null) {
-                seekBar1.setProgress(videoView.getCurrentPosition()/100);
-            }
-
-            if(videoView.isPlaying()) {
-                seekBar1.postDelayed(onEverySecond, 100);
-            }
-
-        }
-    };
-
-    protected void MoreLine()
-    {
+    protected void MoreLine() {
         if (showRange < mRenderer.getLineLength() - 2) {
             seekBar1.setProgress(seekBar1.getProgress() + 1);
         }
     }
 
-    protected void LessLine()
-    {
-        if(showRange > 5)
-        {
+    protected void LessLine() {
+        if (showRange > 5) {
-            seekBar1.setProgress(seekBar1.getProgress()-1);
+            seekBar1.setProgress(seekBar1.getProgress() - 1);
         }
     }
 
-    public void autoRun()
-    {
-        new Thread(new Runnable()
-        {
+    private Runnable onEverySecond = new Runnable() {
+
-            @Override
+        @Override
-            public void run()
-            {
-                if(isRun == STOPPED)
-                {
-                    isRun = RUNNING;
-                    while (seekBar1.getProgress() < seekBar1.getMax()) {
-                        if (seekBar1.getMax() == 0 || breaker) {
-                            breakerOff();
-                            break;
-                        }
-                        try {
-                            Thread.sleep(100);
-                        } catch (InterruptedException e) {
-                            e.printStackTrace();
-                        }
-                        mHandler.post(new Runnable() {
-                            public void run() {
+        public void run() {
 
+            if(seekBar1 != null) {
+                seekBar1.setProgress(videoView.getCurrentPosition()/100);
-                            }
+            }
-                        });
+
+            if(videoView.isPlaying()) {
+                seekBar1.postDelayed(onEverySecond, 100);
-                    }
+            }
-                    isRun = STOPPED;
+
-                }
+        }
-                else if(isRun == RUNNING)
-                {
-                    mHandler.post(new Runnable() {
-                        public void run() {
-                            breakerOn();
-                        }
-                    });
-                }
-            }
-        }).start();
-    }
+    };
+
     public boolean breakerOn()
     {
         breaker = true;
@@ -281,7 +233,7 @@
 
         mRenderer.readButtonTapped(data);
         showRange = mRenderer.getLineLength();
-        seekBar1.setMax((showRange - 1)/3 );
+        seekBar1.setMax((showRange - 1) / 3);
         seekBar1.setProgress(seekBar1.getMax());
     }
 
@@ -310,38 +262,37 @@
         mGLView.onResume();
     }
 
-
     protected void onActivityResult(int requestCode, int resultCode, Intent data)
     {
         super.onActivityResult(requestCode, resultCode, data);
-        switch (requestCode)
-        {
+        switch (requestCode) {
             case 1:
                 try {
                     String fileName = data.getStringExtra("file_name");
 
                     DataIOThread dataRead = new DataIOThread(fileName);
                     readDataInit(dataRead);
-                }
-                catch(Exception e)
-                {
+                } catch (Exception e) {
                     e.printStackTrace();
                 }
-            break;
+                break;
         }
     }
+
     //////////////////////////////////////
-    private void initVideoPath(){
+    private void initVideoPath() {
-        File file = new File(Environment.getExternalStorageDirectory(),"myvideo.mp4");
+        File file = new File(Environment.getExternalStorageDirectory(), "myvideo.mp4");
         videoView.setVideoPath(file.getPath());
     }
 
     @Override
-    protected void onDestroy(){
+    protected void onDestroy() {
         super.onDestroy();
-        if (videoView != null){
+        if (videoView != null) {
             videoView.suspend();
         }
     }
+
+
     ////////////////////////////////////CHAO
 }
\ No newline at end of file
Index: app/src/main/java/com/example/brb_lab/swing3d/ChaoMain.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/brb_lab/swing3d/ChaoMain.java	(revision )
+++ app/src/main/java/com/example/brb_lab/swing3d/ChaoMain.java	(revision )
@@ -0,0 +1,145 @@
+//automatically 10 seconds recording finished version
+//replay finished version
+package com.example.brb_lab.swing3d;
+
+import android.app.Activity;
+import android.hardware.Camera;
+import android.media.MediaRecorder;
+import android.os.Bundle;
+import android.os.Environment;
+import android.view.Menu;
+import android.view.SurfaceHolder;
+import android.view.SurfaceView;
+import android.view.View;
+import android.view.View.OnClickListener;
+import android.view.Window;
+import android.widget.Button;
+import android.widget.Toast;
+
+import java.io.File;
+import java.util.Timer;
+import java.util.TimerTask;
+
+//import android.os.Handler;
+//import android.widget.TextView;
+
+public class ChaoMain extends Activity implements OnClickListener {
+    Button record, play_video;
+    // video file
+    File viodFile;
+    MediaRecorder mRecorder;
+    // show the SurfaceView of the video
+    SurfaceView sView;
+
+    boolean isRecording = false;
+    Camera camera;
+    Timer timer;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        //Hide title bar  Chapter 2.24
+        requestWindowFeature(Window.FEATURE_NO_TITLE);
+
+        setContentView(R.layout.chao_main);
+        record = (Button) findViewById(R.id.record);
+        play_video = (Button) findViewById(R.id.play_video);
+        sView = (SurfaceView) findViewById(R.id.dView);
+        // set Surface do not need its own buffer zone
+        sView.getHolder().setType(SurfaceHolder.SURFACE_TYPE_PUSH_BUFFERS);
+        // resolution
+        sView.getHolder().setFixedSize(320, 280);
+        // keep the screen
+        sView.getHolder().setKeepScreenOn(true);
+        record.setOnClickListener(this);
+        play_video.setOnClickListener(this);
+    }
+
+    @Override
+    public boolean onCreateOptionsMenu(Menu menu) {
+        // Inflate the menu; this adds items to the action bar if it is present.
+        getMenuInflater().inflate(R.menu.menu_main, menu);
+        return true;
+    }
+
+    @Override
+    public void onClick(View v) {
+        switch (v.getId()) {
+            case R.id.record:
+                if (!Environment.getExternalStorageState().equals(
+                        Environment.MEDIA_MOUNTED)) {
+                    Toast.makeText(this, "No SD card！", Toast.LENGTH_SHORT).show();
+                    return;
+                }
+                try {
+                    // create MediaPlayer
+                    mRecorder = new MediaRecorder();
+                    mRecorder.reset();
+   /* camera = Camera.open();
+    camera.unlock();
+    camera.setDisplayOrientation(0);
+    mRecorder.setCamera(camera);*/
+                    // save the video file
+                    viodFile = new File(Environment.getExternalStorageDirectory()
+                            .getCanonicalFile() + "/myvideo.mp4");
+                    if (!viodFile.exists())
+                        viodFile.createNewFile();
+                    // 设置从麦克风采集声音
+                    mRecorder.setAudioSource(MediaRecorder.AudioSource.MIC);
+                    // 设置从摄像头采集图像
+                    mRecorder.setVideoSource(MediaRecorder.VideoSource.CAMERA);
+                    // 设置视频、音频的输出格式
+                    mRecorder.setOutputFormat(MediaRecorder.OutputFormat.DEFAULT);
+                    // 设置音频的编码格式、
+                    mRecorder.setAudioEncoder(MediaRecorder.AudioEncoder.DEFAULT);
+                    // 设置图像编码格式
+                    mRecorder.setVideoEncoder(MediaRecorder.VideoEncoder.DEFAULT);
+                    //mRecorder.setMaxDuration(10000);
+                    //视频旋转90度
+                    //mRecorder.setOrientationHint(90);
+
+                    //mRecorder.setVideoSize(320, 280);
+                    // mRecorder.setVideoFrameRate(5);
+                    mRecorder.setOutputFile(viodFile.getAbsolutePath());
+                    // 指定SurfaceView来预览视频
+                    mRecorder.setPreviewDisplay(sView.getHolder().getSurface());
+                    mRecorder.prepare();
+                    // start
+                    mRecorder.start();
+                    // record button not available
+                    record.setEnabled(false);
+                    // play button not available
+                    play_video.setEnabled(false);
+                    isRecording = true;
+
+                    timer = new Timer();
+                    timer.schedule(new TimerTask() {
+                        int i = 10;
+
+                        @Override
+                        public void run() {
+                            //stop
+                            mRecorder.stop();
+                            //release resource
+                            mRecorder.release();
+                            mRecorder = null;
+                            isRecording = false;
+                            //define a message to send
+                            //Message msg = new Message();
+                            //msg.what = i--;
+                            //handler.sendMessage(msg);
+                        }
+                    }, 2100);
+                    //record button available
+                    record.setEnabled(true);
+                    //  button available
+                    play_video.setEnabled(true);
+                } catch (Exception e) {
+                    e.printStackTrace();
+                }
+                break;
+            default:
+                break;
+        }
+    }
+}
\ No newline at end of file
